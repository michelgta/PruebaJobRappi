// Code generated by moshi-kotlin-codegen. Do not edit.
package mx.com.pruebajobrappi.data.models

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonDataException
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.Double
import kotlin.Int
import kotlin.Long
import kotlin.String

class MovieDataJsonAdapter(moshi: Moshi) : JsonAdapter<MovieData>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("id", "title", "overview", "releaseDate", "vote_average", "vote_count", "poster_path", "isFavorite", "page")

    private val longAdapter: JsonAdapter<Long> = moshi.adapter(Long::class.java).nonNull()

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter(String::class.java).nullSafe()

    private val nullableDoubleAdapter: JsonAdapter<Double?> =
            moshi.adapter(Double::class.java).nullSafe()

    private val nullableLongAdapter: JsonAdapter<Long?> = moshi.adapter(Long::class.java).nullSafe()

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter(Boolean::class.java).nullSafe()

    private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.java).nullSafe()

    override fun toString(): String = "GeneratedJsonAdapter(MovieData)"

    override fun fromJson(reader: JsonReader): MovieData {
        var id: Long? = null
        var title: String? = null
        var titleSet: Boolean = false
        var overview: String? = null
        var overviewSet: Boolean = false
        var releaseDate: String? = null
        var releaseDateSet: Boolean = false
        var voteAverage: Double? = null
        var voteAverageSet: Boolean = false
        var voteCount: Long? = null
        var voteCountSet: Boolean = false
        var posterPath: String? = null
        var posterPathSet: Boolean = false
        var isFavorite: Boolean? = null
        var isFavoriteSet: Boolean = false
        var page: Int? = null
        var pageSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 -> id = longAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'id' was null at ${reader.path}")
                1 ->  {
                    title = nullableStringAdapter.fromJson(reader)
                    titleSet = true
                }
                2 ->  {
                    overview = nullableStringAdapter.fromJson(reader)
                    overviewSet = true
                }
                3 ->  {
                    releaseDate = nullableStringAdapter.fromJson(reader)
                    releaseDateSet = true
                }
                4 ->  {
                    voteAverage = nullableDoubleAdapter.fromJson(reader)
                    voteAverageSet = true
                }
                5 ->  {
                    voteCount = nullableLongAdapter.fromJson(reader)
                    voteCountSet = true
                }
                6 ->  {
                    posterPath = nullableStringAdapter.fromJson(reader)
                    posterPathSet = true
                }
                7 ->  {
                    isFavorite = nullableBooleanAdapter.fromJson(reader)
                    isFavoriteSet = true
                }
                8 ->  {
                    page = nullableIntAdapter.fromJson(reader)
                    pageSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = MovieData()
        result = result.copy(
                id = id ?: result.id,
                title = if (titleSet) title else result.title,
                overview = if (overviewSet) overview else result.overview,
                releaseDate = if (releaseDateSet) releaseDate else result.releaseDate,
                voteAverage = if (voteAverageSet) voteAverage else result.voteAverage,
                voteCount = if (voteCountSet) voteCount else result.voteCount,
                posterPath = if (posterPathSet) posterPath else result.posterPath,
                isFavorite = if (isFavoriteSet) isFavorite else result.isFavorite,
                page = if (pageSet) page else result.page)
        return result
    }

    override fun toJson(writer: JsonWriter, value: MovieData?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("id")
        longAdapter.toJson(writer, value.id)
        writer.name("title")
        nullableStringAdapter.toJson(writer, value.title)
        writer.name("overview")
        nullableStringAdapter.toJson(writer, value.overview)
        writer.name("releaseDate")
        nullableStringAdapter.toJson(writer, value.releaseDate)
        writer.name("vote_average")
        nullableDoubleAdapter.toJson(writer, value.voteAverage)
        writer.name("vote_count")
        nullableLongAdapter.toJson(writer, value.voteCount)
        writer.name("poster_path")
        nullableStringAdapter.toJson(writer, value.posterPath)
        writer.name("isFavorite")
        nullableBooleanAdapter.toJson(writer, value.isFavorite)
        writer.name("page")
        nullableIntAdapter.toJson(writer, value.page)
        writer.endObject()
    }
}
