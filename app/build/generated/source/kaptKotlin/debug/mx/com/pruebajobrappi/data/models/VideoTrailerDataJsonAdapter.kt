// Code generated by moshi-kotlin-codegen. Do not edit.
package mx.com.pruebajobrappi.data.models

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.Int
import kotlin.String

class VideoTrailerDataJsonAdapter(moshi: Moshi) : JsonAdapter<VideoTrailerData>() {
    private val options: JsonReader.Options =
            JsonReader.Options.of("id", "iso_639_1", "iso_3166_1", "name", "key", "site", "size", "type", "official")

    private val nullableStringAdapter: JsonAdapter<String?> =
            moshi.adapter(String::class.java).nullSafe()

    private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.java).nullSafe()

    private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
            moshi.adapter(Boolean::class.java).nullSafe()

    override fun toString(): String = "GeneratedJsonAdapter(VideoTrailerData)"

    override fun fromJson(reader: JsonReader): VideoTrailerData {
        var id: String? = null
        var idSet: Boolean = false
        var iso_639_1: String? = null
        var iso_639_1Set: Boolean = false
        var iso_3166_1: String? = null
        var iso_3166_1Set: Boolean = false
        var name: String? = null
        var nameSet: Boolean = false
        var key: String? = null
        var keySet: Boolean = false
        var site: String? = null
        var siteSet: Boolean = false
        var size: Int? = null
        var sizeSet: Boolean = false
        var type: String? = null
        var typeSet: Boolean = false
        var official: Boolean? = null
        var officialSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    id = nullableStringAdapter.fromJson(reader)
                    idSet = true
                }
                1 ->  {
                    iso_639_1 = nullableStringAdapter.fromJson(reader)
                    iso_639_1Set = true
                }
                2 ->  {
                    iso_3166_1 = nullableStringAdapter.fromJson(reader)
                    iso_3166_1Set = true
                }
                3 ->  {
                    name = nullableStringAdapter.fromJson(reader)
                    nameSet = true
                }
                4 ->  {
                    key = nullableStringAdapter.fromJson(reader)
                    keySet = true
                }
                5 ->  {
                    site = nullableStringAdapter.fromJson(reader)
                    siteSet = true
                }
                6 ->  {
                    size = nullableIntAdapter.fromJson(reader)
                    sizeSet = true
                }
                7 ->  {
                    type = nullableStringAdapter.fromJson(reader)
                    typeSet = true
                }
                8 ->  {
                    official = nullableBooleanAdapter.fromJson(reader)
                    officialSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = VideoTrailerData()
        result = result.copy(
                id = if (idSet) id else result.id,
                iso_639_1 = if (iso_639_1Set) iso_639_1 else result.iso_639_1,
                iso_3166_1 = if (iso_3166_1Set) iso_3166_1 else result.iso_3166_1,
                name = if (nameSet) name else result.name,
                key = if (keySet) key else result.key,
                site = if (siteSet) site else result.site,
                size = if (sizeSet) size else result.size,
                type = if (typeSet) type else result.type,
                official = if (officialSet) official else result.official)
        return result
    }

    override fun toJson(writer: JsonWriter, value: VideoTrailerData?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("id")
        nullableStringAdapter.toJson(writer, value.id)
        writer.name("iso_639_1")
        nullableStringAdapter.toJson(writer, value.iso_639_1)
        writer.name("iso_3166_1")
        nullableStringAdapter.toJson(writer, value.iso_3166_1)
        writer.name("name")
        nullableStringAdapter.toJson(writer, value.name)
        writer.name("key")
        nullableStringAdapter.toJson(writer, value.key)
        writer.name("site")
        nullableStringAdapter.toJson(writer, value.site)
        writer.name("size")
        nullableIntAdapter.toJson(writer, value.size)
        writer.name("type")
        nullableStringAdapter.toJson(writer, value.type)
        writer.name("official")
        nullableBooleanAdapter.toJson(writer, value.official)
        writer.endObject()
    }
}
