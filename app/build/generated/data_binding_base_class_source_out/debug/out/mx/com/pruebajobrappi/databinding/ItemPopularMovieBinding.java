// Generated by data binding compiler. Do not edit!
package mx.com.pruebajobrappi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import mx.com.pruebajobrappi.R;
import mx.com.pruebajobrappi.data.models.Movie;

public abstract class ItemPopularMovieBinding extends ViewDataBinding {
  @NonNull
  public final ImageView ivMovieFavoriteState;

  @NonNull
  public final ImageView ivMoviePoster;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView tvMovieTitle;

  @NonNull
  public final TextView tvTotalPointsItem;

  @Bindable
  protected Movie mMovie;

  protected ItemPopularMovieBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView ivMovieFavoriteState, ImageView ivMoviePoster, LinearLayout linearLayout,
      TextView tvMovieTitle, TextView tvTotalPointsItem) {
    super(_bindingComponent, _root, _localFieldCount);
    this.ivMovieFavoriteState = ivMovieFavoriteState;
    this.ivMoviePoster = ivMoviePoster;
    this.linearLayout = linearLayout;
    this.tvMovieTitle = tvMovieTitle;
    this.tvTotalPointsItem = tvTotalPointsItem;
  }

  public abstract void setMovie(@Nullable Movie movie);

  @Nullable
  public Movie getMovie() {
    return mMovie;
  }

  @NonNull
  public static ItemPopularMovieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_popular_movie, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemPopularMovieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemPopularMovieBinding>inflateInternal(inflater, R.layout.item_popular_movie, root, attachToRoot, component);
  }

  @NonNull
  public static ItemPopularMovieBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_popular_movie, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemPopularMovieBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemPopularMovieBinding>inflateInternal(inflater, R.layout.item_popular_movie, null, false, component);
  }

  public static ItemPopularMovieBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemPopularMovieBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemPopularMovieBinding)bind(component, view, R.layout.item_popular_movie);
  }
}
